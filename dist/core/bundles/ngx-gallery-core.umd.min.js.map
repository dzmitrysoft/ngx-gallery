{"version":3,"sources":["dist/core/node_modules/tslib/tslib.es6.js","ng://@ngx-gallery/core/lib/models/constants.ts","ng://@ngx-gallery/core/lib/utils/gallery.default.ts","ng://@ngx-gallery/core/lib/components/templates/items.model.ts","ng://@ngx-gallery/core/lib/services/gallery-ref.ts","ng://@ngx-gallery/core/lib/models/config.model.ts","ng://@ngx-gallery/core/lib/services/gallery.service.ts","ng://@ngx-gallery/core/lib/components/gallery.component.ts","ng://@ngx-gallery/core/lib/components/templates/gallery-iframe.component.ts","ng://@ngx-gallery/core/lib/components/templates/gallery-image.component.ts","ng://@ngx-gallery/core/lib/components/templates/gallery-video.component.ts","ng://@ngx-gallery/core/lib/components/gallery-nav.component.ts","ng://@ngx-gallery/core/lib/components/gallery-core.component.ts","ng://@ngx-gallery/core/lib/components/gallery-dots.component.ts","ng://@ngx-gallery/core/lib/components/gallery-thumbs.component.ts","ng://@ngx-gallery/core/lib/components/gallery-slider.component.ts","ng://@ngx-gallery/core/lib/components/gallery-counter.component.ts","ng://@ngx-gallery/core/lib/components/gallery-item.component.ts","ng://@ngx-gallery/core/lib/components/gallery-thumb.component.ts","ng://@ngx-gallery/core/lib/directives/lazy-image.ts","ng://@ngx-gallery/core/lib/directives/tap-click.ts","ng://@ngx-gallery/core/lib/gallery.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","INITIALIZED","ITEMS_CHANGED","INDEX_CHANGED","PLAY","STOP","Cover","Contain","Preload","Lazy","Default","Top","Left","Right","Bottom","Free","Strict","Horizontal","Vertical","Image","Video","Youtube","Iframe","defaultState","action","GalleryAction","isPlaying","hasNext","hasPrev","currIndex","items","defaultConfig","nav","loop","zoomOut","dots","thumb","dotsSize","counter","gestures","autoPlay","thumbWidth","thumbHeight","panSensitivity","disableThumb","playerInterval","imageSize","ImageSize","thumbMode","ThumbnailsMode","dotsPosition","DotsPosition","counterPosition","CounterPosition","thumbPosition","ThumbnailsPosition","loadingStrategy","LoadingStrategy","slidingDirection","SlidingDirection","navIcon","loadingIcon","ImageItem","data","type","GalleryItemType","src","filterActions","actions","filter","state","indexOf","GalleryRef","config","deleteInstance","itemClick","Subject","thumbClick","_state","BehaviorSubject","_config","asObservable","defineProperty","pipe","activatePlayer","_this","playerActions","switchMap","of","delay","tap","EMPTY","setState","setConfig","add","item","active","addImage","addVideo","VideoItem","addIframe","IframeItem","addYoutube","YoutubeItem","remove","slice","load","set","prev","play","interval","stop","reset","destroy","complete","GALLERY_CONFIG","InjectionToken","Gallery","_instances","Map","ref","id","has","galleryRef","get","destroyAll","forEach","resetAll","delete","Injectable","args","providedIn","Optional","Inject","GalleryComponent","_gallery","itemTemplate","thumbTemplate","destroyRef","skipInitConfig","EventEmitter","playingChange","indexChange","itemsChange","_itemClick$","Subscription","_thumbClick$","_itemChange$","_indexChange$","_playingChange$","_playerListener$","getConfig","onAction","ngOnChanges","changes","currentValue","previousValue","ngOnInit","subscribe","observers","indexChanged","emit","itemsChanged","playingChanged","ngOnDestroy","unsubscribe","onItemClick","onThumbClick","onError","err","Component","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","Input","Output","GalleryIframeComponent","_sanitizer","shouldPause","iframe","nativeElement","iframeSrc","bypassSecurityTrustResourceUrl","DomSanitizer","ViewChild","GalleryImageComponent","progress","imageUrl","loadError","loaderTemplate","bypassSecurityTrustHtml","loadingError","errorTemplate","onProgress","_a","loaded","total","onLoaded","blobUrl","bypassSecurityTrustStyle","animations","trigger","transition","style","opacity","animate","HostBinding","GalleryVideoComponent","video","paused","pause","Array","videoSources","url","GalleryNavComponent","GalleryCoreComponent","GalleryDotsComponent","GalleryThumbsComponent","_el","_zone","_slidingWorker$","_freeModeCurrentOffset","sliderState$","map","getSliderStyles","updateSlider","Hammer","direction","DIRECTION_VERTICAL","DIRECTION_HORIZONTAL","_hammer","runOutsideAngular","on","strictMode","freeMode","deltaY","isFinal","verticalPan","deltaX","horizontalPan","minFreeScrollExceeded","maxFreeScrollExceeded","delta","width","height","transform","DIRECTION_UP","offsetDirection","velocityY","velocityX","newState","ElementRef","NgZone","GallerySliderComponent","platform","isPlatformBrowser","_resizeSub$","fromEvent","window","debounceTime","setTimeout","offsetWidth","offsetHeight","decorators","PLATFORM_ID","GalleryCounterComponent","GalleryItemComponent","Types","index","GalleryThumbComponent","LazyImage","document","_imageLoader$","_loaderSub$","imageSrc","nativeLoader","loadImage","imagePath","img","createElement","loadSuccess","Error","zip","Directive","DOCUMENT","TapClick","clickListener","tapClick","activateClickEvent","tapClickDisabled","GalleryModule","withConfig","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","HttpClientModule","declarations","exports","Determinate","Indeterminate"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum GalleryAction {\r\n  INITIALIZED = 'initialized',\r\n  ITEMS_CHANGED = 'itemsChanged',\r\n  INDEX_CHANGED = 'indexChanged',\r\n  PLAY = 'play',\r\n  STOP = 'stop'\r\n}\r\n\r\nexport enum ImageSize {\r\n  Cover = 'cover',\r\n  Contain = 'contain'\r\n}\r\n\r\nexport enum LoadingStrategy {\r\n  Preload = 'preload',\r\n  Lazy = 'lazy',\r\n  Default = 'default'\r\n}\r\n\r\nexport enum ThumbnailsPosition {\r\n  Top = 'top',\r\n  Left = 'left',\r\n  Right = 'right',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ImageLoaderMode {\r\n  Determinate= 'determinate',\r\n  Indeterminate= 'indeterminate'\r\n}\r\n\r\nexport enum DotsPosition {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum CounterPosition {\r\n  Top = 'top',\r\n  Bottom = 'bottom'\r\n}\r\n\r\nexport enum ThumbnailsMode {\r\n  Free = 'free',\r\n  Strict = 'strict'\r\n}\r\n\r\nexport enum SlidingDirection {\r\n  Horizontal = 'horizontal',\r\n  Vertical = 'vertical'\r\n}\r\n\r\nexport enum GalleryItemType {\r\n  Image = 'image',\r\n  Video = 'video',\r\n  Youtube = 'youtube',\r\n  Iframe = 'iframe'\r\n}\r\n","import {\r\n  ImageSize,\r\n  GalleryAction,\r\n  ThumbnailsMode,\r\n  LoadingStrategy,\r\n  SlidingDirection,\r\n  ThumbnailsPosition,\r\n  ImageLoaderMode,\r\n  DotsPosition,\r\n  CounterPosition\r\n} from '../models/constants';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n/** Initial state */\r\nexport const defaultState: GalleryState = {\r\n  action: GalleryAction.INITIALIZED,\r\n  isPlaying: false,\r\n  hasNext: false,\r\n  hasPrev: false,\r\n  currIndex: 0,\r\n  items: []\r\n};\r\n\r\nexport const defaultConfig: GalleryConfig = {\r\n  nav: true,\r\n  loop: true,\r\n  zoomOut: 0,\r\n  dots: false,\r\n  thumb: true,\r\n  dotsSize: 30,\r\n  counter: true,\r\n  gestures: true,\r\n  autoPlay: false,\r\n  thumbWidth: 120,\r\n  thumbHeight: 90,\r\n  panSensitivity: 25,\r\n  disableThumb: false,\r\n  playerInterval: 3000,\r\n  imageSize: ImageSize.Contain,\r\n  thumbMode: ThumbnailsMode.Strict,\r\n  dotsPosition: DotsPosition.Bottom,\r\n  counterPosition: CounterPosition.Top,\r\n  thumbPosition: ThumbnailsPosition.Bottom,\r\n  loadingStrategy: LoadingStrategy.Default,\r\n  slidingDirection: SlidingDirection.Horizontal,\r\n  navIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 240.823 240.823\" version=\"1.1\" viewBox=\"0 0 240.823 240.823\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z\" fill=\"#fff\"/></svg>`,\r\n  loadingIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg stroke=\"#fff\" viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fill-rule=\"evenodd\" stroke-width=\"2\"><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"0s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle><circle cx=\"22\" cy=\"22\" r=\"1\"><animate attributeName=\"r\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.165, 0.84, 0.44, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 20\"/><animate attributeName=\"stroke-opacity\" begin=\"-0.9s\" calcMode=\"spline\" dur=\"1.8s\" keySplines=\"0.3, 0.61, 0.355, 1\" keyTimes=\"0; 1\" repeatCount=\"indefinite\" values=\"1; 0\"/></circle></g></svg>`\r\n};\r\n","import { GalleryItem } from '../../models/gallery.model';\r\nimport { GalleryItemType } from '../../models/constants';\r\n\r\nexport class ImageItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Image;\r\n  }\r\n}\r\n\r\nexport class VideoItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Video;\r\n  }\r\n}\r\n\r\nexport class IframeItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = data;\r\n    this.type = GalleryItemType.Iframe;\r\n  }\r\n}\r\n\r\nexport class YoutubeItem implements GalleryItem {\r\n  readonly type: string;\r\n  readonly data: any;\r\n\r\n  constructor(data: any) {\r\n    this.data = {\r\n      src: `//youtube.com/embed/${data.src}?wmode=transparent`,\r\n      thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${data.src}/default.jpg`\r\n    };\r\n    this.type = GalleryItemType.Youtube;\r\n  }\r\n}\r\n","import { BehaviorSubject, Subject, Observable, of, EMPTY} from 'rxjs';\r\nimport { delay, filter, switchMap, tap } from 'rxjs/operators';\r\nimport { defaultState } from '../utils/gallery.default';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryAction } from '../models/constants';\r\nimport { IframeItem, ImageItem, VideoItem, YoutubeItem } from '../components/templates/items.model';\r\n\r\nconst filterActions = (actions: string[]) => {\r\n  return filter((state: GalleryState) => actions.indexOf(state.action) > -1);\r\n};\r\n\r\nexport class GalleryRef {\r\n\r\n  /** Stream that emits gallery state */\r\n  private readonly _state: BehaviorSubject<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  private readonly _config: BehaviorSubject<GalleryConfig>;\r\n\r\n  /** Stream that emits on item click */\r\n  readonly itemClick = new Subject<number>();\r\n\r\n  /** Stream that emits on thumbnail click */\r\n  readonly thumbClick = new Subject<number>();\r\n\r\n  /** Stream that emits on an error occurs */\r\n  readonly error = new Subject<GalleryError>();\r\n\r\n  /** Gallery Events */\r\n\r\n  /** Stream that emits gallery state */\r\n  readonly state: Observable<GalleryState>;\r\n\r\n  /** Stream that emits gallery config */\r\n  readonly config: Observable<GalleryConfig>;\r\n\r\n  /** Stream that emits when gallery is initialized/reset */\r\n  get initialized(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INITIALIZED]));\r\n  }\r\n\r\n  /** Stream that emits when items is changed (items loaded, item added, item removed) */\r\n  get itemsChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.ITEMS_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when current item is changed */\r\n  get indexChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.INDEX_CHANGED]));\r\n  }\r\n\r\n  /** Stream that emits when the player should start or stop */\r\n  get playingChanged(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP]));\r\n  }\r\n\r\n  /** Stream that emits when the player should start or stop */\r\n  private get playerActions(): Observable<GalleryState> {\r\n    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP, GalleryAction.INDEX_CHANGED]));\r\n  }\r\n\r\n  constructor(config: GalleryConfig, private deleteInstance: Function) {\r\n    this._state = new BehaviorSubject<GalleryState>(defaultState);\r\n    this._config = new BehaviorSubject<GalleryConfig>(config);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._config.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Activate player actions listener\r\n   */\r\n  activatePlayer(): Observable<GalleryState> {\r\n    return this.playerActions.pipe(\r\n      switchMap((e: GalleryState) =>\r\n        e.isPlaying ? of({}).pipe(\r\n          delay(this._config.value.playerInterval),\r\n          tap(() => this.next())\r\n        ) : EMPTY\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set gallery state\r\n   * @param state\r\n   */\r\n  private setState(state: GalleryState) {\r\n    this._state.next({...this._state.value, ...state});\r\n  }\r\n\r\n  /**\r\n   * Set gallery config\r\n   * @param config\r\n   */\r\n  setConfig(config: GalleryConfig) {\r\n    this._config.next({...this._config.value, ...config});\r\n  }\r\n\r\n  /** Add gallery item\r\n   * @param item - Gallery item object\r\n   * @param active - Set the new item as current slide\r\n   */\r\n  add(item: GalleryItem, active?: boolean) {\r\n\r\n    const items = [...this._state.value.items, item];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      items: items,\r\n      hasNext: items.length > 1,\r\n      currIndex: active ? items.length - 1 : this._state.value.currIndex\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add image item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addImage(data: any, active?: boolean) {\r\n    this.add(new ImageItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add video item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addVideo(data: any, active?: boolean) {\r\n    this.add(new VideoItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add iframe item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addIframe(data: any, active?: boolean) {\r\n    this.add(new IframeItem(data), active);\r\n  }\r\n\r\n  /**\r\n   * Add youtube item\r\n   * @param data\r\n   * @param active\r\n   */\r\n  addYoutube(data: any, active?: boolean) {\r\n    this.add(new YoutubeItem(data), active);\r\n  }\r\n\r\n  /** Remove gallery item\r\n   * @param i - Item index\r\n   */\r\n  remove(i: number) {\r\n    const items = [\r\n      ...this._state.value.items.slice(0, i),\r\n      ...this._state.value.items.slice(i + 1, this._state.value.items.length)\r\n    ];\r\n    this.setState({\r\n      action: GalleryAction.ITEMS_CHANGED,\r\n      items: items,\r\n      hasNext: items.length > 1,\r\n      hasPrev: i > 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load items and reset the state\r\n   * @param items - Gallery images data\r\n   */\r\n  load(items: GalleryItem[]) {\r\n    if (items) {\r\n      this.setState({\r\n        action: GalleryAction.ITEMS_CHANGED,\r\n        items: items,\r\n        hasNext: items.length > 1,\r\n        hasPrev: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set active item\r\n   * @param i - Active Index\r\n   */\r\n  set(i: number) {\r\n    if (i !== this._state.value.currIndex) {\r\n      this.setState({\r\n        action: GalleryAction.INDEX_CHANGED,\r\n        currIndex: i,\r\n        hasNext: i < this._state.value.items.length - 1,\r\n        hasPrev: i > 0\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Next item\r\n   */\r\n  next() {\r\n    if (this._state.value.hasNext) {\r\n      this.set(this._state.value.currIndex + 1);\r\n    } else if (this._config.value.loop) {\r\n      this.set(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prev item\r\n   */\r\n  prev() {\r\n    if (this._state.value.hasPrev) {\r\n      this.set(this._state.value.currIndex - 1);\r\n    } else if (this._config.value.loop) {\r\n      this.set(this._state.value.items.length - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start gallery player\r\n   * @param interval\r\n   */\r\n  play(interval?: number) {\r\n    if (interval) {\r\n      this.setConfig({playerInterval: interval});\r\n    }\r\n    this.setState({action: GalleryAction.PLAY, isPlaying: true});\r\n  }\r\n\r\n  /**\r\n   * Stop gallery player\r\n   */\r\n  stop() {\r\n    this.setState({action: GalleryAction.STOP, isPlaying: false});\r\n  }\r\n\r\n  /**\r\n   * Reset gallery to initial state\r\n   */\r\n  reset() {\r\n    this.setState(defaultState);\r\n  }\r\n\r\n  /**\r\n   * Destroy gallery\r\n   */\r\n  destroy() {\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this.itemClick.complete();\r\n    this.thumbClick.complete();\r\n    this.deleteInstance();\r\n  }\r\n\r\n}\r\n","import { InjectionToken, TemplateRef } from '@angular/core';\r\n\r\nexport const GALLERY_CONFIG = new InjectionToken<GalleryConfig>('galleryConfig');\r\n\r\nexport interface GalleryConfig {\r\n  nav?: boolean;\r\n  dots?: boolean;\r\n  loop?: boolean;\r\n  thumb?: boolean;\r\n  zoomOut?: number;\r\n  navIcon?: string;\r\n  counter?: boolean;\r\n  dotsSize?: number;\r\n  gestures?: boolean;\r\n  autoPlay?: boolean;\r\n  thumbWidth?: number;\r\n  thumbHeight?: number;\r\n  loadingIcon?: string;\r\n  loadingError?: string;\r\n  thumbLoadingIcon?: string;\r\n  thumbLoadingError?: string;\r\n  disableThumb?: boolean;\r\n  panSensitivity?: number;\r\n  playerInterval?: number;\r\n  itemTemplate?: TemplateRef<any>;\r\n  thumbTemplate?: TemplateRef<any>;\r\n  thumbMode?: 'strict' | 'free';\r\n  imageSize?: 'cover' | 'contain';\r\n  dotsPosition?: 'top' | 'bottom';\r\n  counterPosition?: 'top' | 'bottom';\r\n  slidingDirection?: 'horizontal' | 'vertical';\r\n  loadingStrategy?: 'preload' | 'lazy' | 'default';\r\n  thumbPosition?: 'top' | 'left' | 'right' | 'bottom';\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\n\r\nimport { GalleryRef } from './gallery-ref';\r\nimport { GalleryConfig, GALLERY_CONFIG } from '../models/config.model';\r\nimport { defaultConfig } from '../utils/gallery.default';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Gallery {\r\n\r\n  /** Store gallery instances */\r\n  private readonly _instances = new Map<string, GalleryRef>();\r\n\r\n  /** Global config */\r\n  config: GalleryConfig;\r\n\r\n  constructor(@Optional() @Inject(GALLERY_CONFIG) config: GalleryConfig) {\r\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or create gallery by ID\r\n   * @param id\r\n   * @param config\r\n   */\r\n  ref(id = 'root', config?: GalleryConfig): GalleryRef {\r\n    if (this._instances.has(id)) {\r\n      const galleryRef = this._instances.get(id);\r\n      if (config) {\r\n        galleryRef.setConfig({...this.config, ...config});\r\n      }\r\n      return galleryRef;\r\n    } else {\r\n      return this._instances.set(id, new GalleryRef({...this.config, ...config}, this.deleteInstance(id))).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all gallery instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * Reset all gallery instances\r\n   */\r\n  resetAll() {\r\n    this._instances.forEach((ref: GalleryRef) => ref.reset());\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each gallery instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      if (this._instances.has(id)) {\r\n        this._instances.delete(id);\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Subscription, SubscriptionLike } from 'rxjs';\r\nimport { Gallery } from '../services/gallery.service';\r\nimport { GalleryRef } from '../services/gallery-ref';\r\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\r\nimport { IframeItem, ImageItem, VideoItem, YoutubeItem } from './templates/items.model';\r\n\r\n@Component({\r\n  selector: 'gallery',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../styles/gallery.scss'],\r\n  template: `\r\n    <gallery-core [state]=\"galleryRef.state | async\"\r\n                  [config]=\"galleryRef.config | async\"\r\n                  (action)=\"onAction($event)\"\r\n                  (itemClick)=\"onItemClick($event)\"\r\n                  (thumbClick)=\"onThumbClick($event)\"\r\n                  (error)=\"onError($event)\"></gallery-core>\r\n    <ng-content></ng-content>\r\n  `\r\n})\r\nexport class GalleryComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  galleryRef: GalleryRef;\r\n  @Input() id: string;\r\n  @Input() items: GalleryItem [];\r\n  @Input() nav: boolean = this._gallery.config.nav;\r\n  @Input() dots: boolean = this._gallery.config.dots;\r\n  @Input() loop: boolean = this._gallery.config.loop;\r\n  @Input() thumb: boolean = this._gallery.config.thumb;\r\n  @Input() zoomOut: number = this._gallery.config.zoomOut;\r\n  @Input() counter: boolean = this._gallery.config.counter;\r\n  @Input() dotsSize: number = this._gallery.config.dotsSize;\r\n  @Input() autoPlay: boolean = this._gallery.config.autoPlay;\r\n  @Input() gestures: boolean = this._gallery.config.gestures;\r\n  @Input() thumbWidth: number = this._gallery.config.thumbWidth;\r\n  @Input() thumbHeight: number = this._gallery.config.thumbHeight;\r\n  @Input() disableThumb: boolean = this._gallery.config.disableThumb;\r\n  @Input() panSensitivity: number = this._gallery.config.panSensitivity;\r\n  @Input() playerInterval: number = this._gallery.config.playerInterval;\r\n  @Input() itemTemplate: TemplateRef<any> = this._gallery.config.itemTemplate;\r\n  @Input() thumbTemplate: TemplateRef<any> = this._gallery.config.thumbTemplate;\r\n  @Input() thumbMode: 'strict' | 'free' = this._gallery.config.thumbMode;\r\n  @Input() imageSize: 'cover' | 'contain' = this._gallery.config.imageSize;\r\n  @Input() dotsPosition: 'top' | 'bottom' = this._gallery.config.dotsPosition;\r\n  @Input() counterPosition: 'top' | 'bottom' = this._gallery.config.counterPosition;\r\n  @Input() slidingDirection: 'horizontal' | 'vertical' = this._gallery.config.slidingDirection;\r\n  @Input() loadingStrategy: 'preload' | 'lazy' | 'default' = this._gallery.config.loadingStrategy;\r\n  @Input() thumbPosition: 'top' | 'left' | 'right' | 'bottom' = this._gallery.config.thumbPosition;\r\n\r\n  // Inputs used by the lightbox\r\n\r\n  /** Destroy gallery ref on component destroy event */\r\n  @Input() destroyRef = true;\r\n\r\n  /** Skip initializing the config with components inputs (Lightbox mode) */\r\n  @Input() skipInitConfig = false;\r\n\r\n  @Output() itemClick = new EventEmitter<number>();\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n  @Output() playingChange = new EventEmitter<GalleryState>();\r\n  @Output() indexChange = new EventEmitter<GalleryState>();\r\n  @Output() itemsChange = new EventEmitter<GalleryState>();\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  private _itemClick$: SubscriptionLike = Subscription.EMPTY;\r\n  private _thumbClick$: SubscriptionLike = Subscription.EMPTY;\r\n  private _itemChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _indexChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _playingChange$: SubscriptionLike = Subscription.EMPTY;\r\n  private _playerListener$: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  constructor(private _gallery: Gallery) {\r\n  }\r\n\r\n  private getConfig() {\r\n    return {\r\n      nav: this.nav,\r\n      dots: this.dots,\r\n      loop: this.loop,\r\n      thumb: this.thumb,\r\n      zoomOut: this.zoomOut,\r\n      counter: this.counter,\r\n      autoPlay: this.autoPlay,\r\n      gestures: this.gestures,\r\n      dotsSize: this.dotsSize,\r\n      imageSize: this.imageSize,\r\n      thumbMode: this.thumbMode,\r\n      thumbWidth: this.thumbWidth,\r\n      thumbHeight: this.thumbHeight,\r\n      disableThumb: this.disableThumb,\r\n      dotsPosition: this.dotsPosition,\r\n      itemTemplate: this.itemTemplate,\r\n      thumbTemplate: this.thumbTemplate,\r\n      thumbPosition: this.thumbPosition,\r\n      panSensitivity: this.panSensitivity,\r\n      playerInterval: this.playerInterval,\r\n      counterPosition: this.counterPosition,\r\n      loadingStrategy: this.loadingStrategy,\r\n      slidingDirection: this.slidingDirection\r\n    };\r\n  }\r\n\r\n  onAction(i: string | number) {\r\n    switch (i) {\r\n      case 'next':\r\n        this.galleryRef.next();\r\n        break;\r\n      case 'prev':\r\n        this.galleryRef.prev();\r\n        break;\r\n      default:\r\n        this.galleryRef.set(<number>i);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.galleryRef) {\r\n      this.galleryRef.setConfig(this.getConfig());\r\n\r\n      if (changes.items && changes.items.currentValue !== changes.items.previousValue) {\r\n        this.load(this.items);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get gallery instance by id\r\n    if (this.skipInitConfig) {\r\n      this.galleryRef = this._gallery.ref(this.id);\r\n    } else {\r\n      this.galleryRef = this._gallery.ref(this.id, this.getConfig());\r\n    }\r\n\r\n    // Load gallery items\r\n    this.load(this.items);\r\n\r\n    // Activate player listener\r\n    this._playerListener$ = this.galleryRef.activatePlayer().subscribe();\r\n\r\n    // Subscribes to events on demand\r\n    if (this.indexChange.observers.length) {\r\n      this._indexChange$ = this.galleryRef.indexChanged.subscribe((state: GalleryState) => this.indexChange.emit(state));\r\n    }\r\n    if (this.itemsChange.observers.length) {\r\n      this._itemChange$ = this.galleryRef.itemsChanged.subscribe((state: GalleryState) => this.itemsChange.emit(state));\r\n    }\r\n    if (this.playingChange.observers.length) {\r\n      this._playingChange$ = this.galleryRef.playingChanged.subscribe((state: GalleryState) => this.playingChange.emit(state));\r\n    }\r\n\r\n    // Start playing if auto-play is set to true\r\n    if (this.autoPlay) {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._itemClick$.unsubscribe();\r\n    this._thumbClick$.unsubscribe();\r\n    this._itemChange$.unsubscribe();\r\n    this._indexChange$.unsubscribe();\r\n    this._playingChange$.unsubscribe();\r\n    this._playerListener$.unsubscribe();\r\n    if (this.destroyRef) {\r\n      this.galleryRef.destroy();\r\n    }\r\n  }\r\n\r\n  onItemClick(i: number) {\r\n    this.itemClick.emit(i);\r\n    this.galleryRef.itemClick.next(i);\r\n  }\r\n\r\n  onThumbClick(i: number) {\r\n    this.galleryRef.set(i);\r\n    this.thumbClick.emit(i);\r\n    this.galleryRef.thumbClick.next(i);\r\n  }\r\n\r\n  onError(err: GalleryError) {\r\n    this.error.emit(err);\r\n    this.galleryRef.error.next(err);\r\n  }\r\n\r\n  load(items: GalleryItem[]) {\r\n    this.galleryRef.load(items);\r\n  }\r\n\r\n  add(item: GalleryItem, active?: boolean) {\r\n    this.galleryRef.add(item, active);\r\n  }\r\n\r\n  addImage(data: any, active?: boolean) {\r\n    this.add(new ImageItem(data), active);\r\n  }\r\n\r\n  addVideo(data: any, active?: boolean) {\r\n    this.add(new VideoItem(data), active);\r\n  }\r\n\r\n  addIframe(data: any, active?: boolean) {\r\n    this.add(new IframeItem(data), active);\r\n  }\r\n\r\n  addYoutube(data: any, active?: boolean) {\r\n    this.add(new YoutubeItem(data), active);\r\n  }\r\n\r\n  remove(i: number) {\r\n    this.galleryRef.remove(i);\r\n  }\r\n\r\n  next() {\r\n    this.galleryRef.next();\r\n  }\r\n\r\n  prev() {\r\n    this.galleryRef.prev();\r\n  }\r\n\r\n  set(i: number) {\r\n    this.galleryRef.set(i);\r\n  }\r\n\r\n  reset() {\r\n    this.galleryRef.reset();\r\n  }\r\n\r\n  play(interval?: number) {\r\n    this.galleryRef.play(interval);\r\n  }\r\n\r\n  stop() {\r\n    this.galleryRef.stop();\r\n  }\r\n}\r\n","import { Component, Input, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'gallery-iframe',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <iframe #iframe\r\n            frameborder=\"0\"\r\n            allowfullscreen\r\n            [src]=\"iframeSrc\">\r\n    </iframe>\r\n  `\r\n})\r\nexport class GalleryIframeComponent implements OnInit {\r\n\r\n  iframeSrc: SafeResourceUrl;\r\n\r\n  @Input() src: string;\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    const iframe: HTMLIFrameElement = this.iframe.nativeElement;\r\n    if (shouldPause) {\r\n      const src = iframe.src;\r\n      iframe.src = src;\r\n    }\r\n  }\r\n\r\n  @ViewChild('iframe') iframe: ElementRef;\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(this.src);\r\n  }\r\n}\r\n","import { Component, Input, HostBinding, OnInit, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle } from '@angular/platform-browser';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'gallery-image',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({opacity: 0}),\r\n        animate('300ms ease-in', style({opacity: 1}))\r\n      ])\r\n    ])\r\n  ],\r\n  template: `\r\n    <ng-container [lazyImage]=\"src\"\r\n                  (progress)=\"onProgress($event)\"\r\n                  (loaded)=\"onLoaded($event)\"\r\n                  (error)=\"onError($event)\"\r\n                  [ngSwitch]=\"state | async\">\r\n\r\n      <div *ngSwitchCase=\"'success'\"\r\n           @fadeIn\r\n           class=\"g-image-item\"\r\n           [style.backgroundImage]=\"imageUrl\">\r\n      </div>\r\n\r\n      <div *ngSwitchCase=\"'failed'\"\r\n           class=\"g-image-error-message\">\r\n        <div *ngIf=\"errorTemplate; else defaultError\"\r\n             [innerHTML]=\"errorTemplate\"></div>\r\n        <ng-template #defaultError>\r\n          <ng-container *ngIf=\"isThumbnail; else isLarge\">\r\n            <h4>â </h4>\r\n          </ng-container>\r\n          <ng-template #isLarge>\r\n            <h2>â </h2>\r\n            <p>Unable to load the image!</p>\r\n          </ng-template>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <ng-container *ngSwitchCase=\"'loading'\">\r\n        <div *ngIf=\"loaderTemplate; else defaultLoader\"\r\n             class=\"g-loading\"\r\n             [innerHTML]=\"loaderTemplate\">\r\n        </div>\r\n        <ng-template #defaultLoader>\r\n          <div *ngIf=\"isThumbnail\" class=\"g-thumb-loading\"></div>\r\n        </ng-template>\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n})\r\n\r\nexport class GalleryImageComponent implements OnInit, OnDestroy {\r\n\r\n  /** Stream that emits the state */\r\n  private readonly _state = new BehaviorSubject<'loading' | 'success' | 'failed'>('loading');\r\n  readonly state = this._state.asObservable();\r\n\r\n  /** Progress value */\r\n  progress = 0;\r\n\r\n  /** Is thumbnail */\r\n  @Input() isThumbnail: boolean;\r\n\r\n  /** Image source URL */\r\n  @Input() src: string;\r\n  /** Loaded image URL */\r\n  imageUrl: SafeStyle;\r\n\r\n  /** Custom loader template */\r\n  @Input() loadingIcon: string;\r\n  /** Custom loader safe template */\r\n  loaderTemplate: SafeHtml;\r\n\r\n  /** Custom error template */\r\n  @Input() loadingError: string;\r\n  /** Custom error safe template */\r\n  errorTemplate: SafeHtml;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n  /** loading error */\r\n  loadError: Error;\r\n\r\n  @HostBinding('class.g-image-loaded') get imageLoadSuccess(): boolean {\r\n    return !!this.imageUrl;\r\n  }\r\n\r\n  @HostBinding('class.g-image-error') get imageLoadFailed(): boolean {\r\n    return !!this.loadError;\r\n  }\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.loadingIcon) {\r\n      this.loaderTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingIcon);\r\n    }\r\n    if (this.loadingError) {\r\n      this.errorTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingError);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._state.complete();\r\n  }\r\n\r\n  onProgress({loaded, total}: { loaded: number, total: number }) {\r\n    this.progress = loaded * 100 / total;\r\n  }\r\n\r\n  onLoaded(blobUrl: string) {\r\n    this.imageUrl = this._sanitizer.bypassSecurityTrustStyle(`url(\"${blobUrl}\")`);\r\n    this._state.next('success');\r\n  }\r\n\r\n  onError(err: Error) {\r\n    this.loadError = err;\r\n    this._state.next('failed');\r\n    this.error.emit(err);\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, ViewChild, ElementRef, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'gallery-video',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <video #video controls poster=\"{{poster}}\" (error)=\"error.emit($event)\">\r\n      <source *ngFor=\"let src of videoSources\" src=\"{{src?.url}}\" type=\"{{src?.type}}\"/>\r\n    </video>\r\n  `\r\n})\r\nexport class GalleryVideoComponent implements OnInit {\r\n\r\n  videoSources: {url: string, type?: string}[];\r\n\r\n  @Input() src: string | {url: string, type?: string}[];\r\n  @Input() poster: string;\r\n\r\n  @Input('pause') set pauseVideo(shouldPause: boolean) {\r\n    const video: HTMLVideoElement = this.video.nativeElement;\r\n    if (shouldPause && !video.paused) {\r\n      video.pause();\r\n    }\r\n  }\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @ViewChild('video') video: ElementRef;\r\n\r\n  ngOnInit() {\r\n    if (this.src instanceof Array) {\r\n      // If video has multiple sources\r\n      this.videoSources = [...this.src];\r\n    } else {\r\n      this.videoSources = [{ url: this.src }];\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-nav',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <i *ngIf=\"config.loop || state.hasPrev\"\r\n       class=\"g-nav-prev\"\r\n       aria-label=\"Previous\"\r\n       (tapClick)=\"action.emit('prev')\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n\r\n    <i *ngIf=\"config.loop || state.hasNext\"\r\n       class=\"g-nav-next\"\r\n       aria-label=\"Next\"\r\n       (tapClick)=\"action.emit('next')\"\r\n       [innerHtml]=\"navIcon\"></i>\r\n  `\r\n})\r\nexport class GalleryNavComponent implements OnInit {\r\n\r\n  navIcon: SafeHtml;\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<string>();\r\n\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);\r\n  }\r\n}\r\n","import { Component, Input, Output, HostBinding, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\r\nimport { GalleryError, GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-core',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <gallery-thumbs *ngIf=\"config.thumb\"\r\n                    [state]=\"state\"\r\n                    [config]=\"config\"\r\n                    (action)=\"action.emit($event)\"\r\n                    (thumbClick)=\"thumbClick.emit($event)\">\r\n    </gallery-thumbs>\r\n    <div class=\"g-box\">\r\n      <gallery-slider [state]=\"state\"\r\n                      [config]=\"config\"\r\n                      (action)=\"action.emit($event)\"\r\n                      (itemClick)=\"itemClick.emit($event)\"\r\n                      (error)=\"error.emit($event)\">\r\n\r\n        <gallery-nav *ngIf=\"config.nav && state.items.length > 1\"\r\n                     [state]=\"state\"\r\n                     [config]=\"config\"\r\n                     (action)=\"action.emit($event)\">\r\n        </gallery-nav>\r\n\r\n      </gallery-slider>\r\n\r\n      <gallery-dots *ngIf=\"config.dots\"\r\n                    [state]=\"state\"\r\n                    [config]=\"config\"\r\n                    (action)=\"action.emit($event)\">\r\n      </gallery-dots>\r\n\r\n      <gallery-counter *ngIf=\"config.counter\"\r\n                       [state]=\"state\">\r\n      </gallery-counter>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryCoreComponent {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<string | number>();\r\n  @Output() itemClick = new EventEmitter<number>();\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Set thumbnails position */\r\n  @HostBinding('attr.thumbPosition') get thumbPosition(): 'top' | 'left' | 'right' | 'bottom' {\r\n    return this.config.thumbPosition;\r\n  }\r\n\r\n  /** Set sliding direction */\r\n  @HostBinding('attr.slidingDirection') get slidingDirection(): 'horizontal' | 'vertical' {\r\n    return this.config.slidingDirection;\r\n  }\r\n\r\n  /** Disable thumbnails clicks */\r\n  @HostBinding('attr.disableThumb') get disableThumb(): boolean {\r\n    return this.config.disableThumb;\r\n  }\r\n\r\n  /** Set gallery image size */\r\n  @HostBinding('attr.imageSize') get imageSize(): 'cover' | 'contain' {\r\n    return this.config.imageSize;\r\n  }\r\n\r\n  /** Set gallery dots position */\r\n  @HostBinding('attr.dotsPosition') get dotsPosition(): 'top' | 'bottom' {\r\n    return this.config.dotsPosition;\r\n  }\r\n\r\n  /** Set gallery counter position */\r\n  @HostBinding('attr.counterPosition') get counterPosition(): 'top' | 'bottom' {\r\n    return this.config.counterPosition;\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, ChangeDetectionStrategy, EventEmitter } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-dots',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"g-dot\"\r\n         *ngFor=\"let item of state.items; let i = index\"\r\n         [class.g-dot-active]=\"i === state.currIndex\"\r\n         [style.width.px]=\"config?.dotsSize\"\r\n         [style.height.px]=\"config?.dotsSize\"\r\n         (tapClick)=\"action.emit(i)\">\r\n      <div class=\"g-dot-inner\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryDotsComponent {\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  @Output() action = new EventEmitter<number>();\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  HostBinding,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { ThumbnailsPosition, ThumbnailsMode } from '../models/constants';\r\nimport { SliderState, WorkerState } from '../models/slider.model';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-thumbs',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div *ngIf=\"sliderState$ | async; let sliderState\"\r\n         class=\"g-thumbs-container\">\r\n      <div class=\"g-slider\"\r\n           [class.g-no-transition]=\"sliderState.active\"\r\n           [ngStyle]=\"sliderState.style\">\r\n\r\n        <gallery-thumb *ngFor=\"let item of state.items;let i = index\"\r\n                       [type]=\"item.type\"\r\n                       [config]=\"config\"\r\n                       [data]=\"item.data\"\r\n                       [currIndex]=\"state.currIndex\"\r\n                       [index]=\"i\"\r\n                       [tapClickDisabled]=\"config.disableThumb\"\r\n                       (tapClick)=\"thumbClick.emit(i)\"\r\n                       (error)=\"error.emit({itemIndex: i, error: $event})\"></gallery-thumb>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryThumbsComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /** Sliding worker */\r\n  private readonly _slidingWorker$ = new BehaviorSubject<WorkerState>({value: 0, active: false});\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  /** Current slider position in free sliding mode */\r\n  private _freeModeCurrentOffset = 0;\r\n\r\n  /** Stream that emits sliding state */\r\n  sliderState$: Observable<SliderState>;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when the active item should change */\r\n  @Output() action = new EventEmitter<string | number>();\r\n\r\n  /** Stream that emits when thumb is clicked */\r\n  @Output() thumbClick = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Host height */\r\n  @HostBinding('style.height') height: string;\r\n\r\n  /** Host width */\r\n  @HostBinding('style.width') width: string;\r\n\r\n  constructor(private _el: ElementRef, private _zone: NgZone) {\r\n\r\n    // Activate sliding worker\r\n    this.sliderState$ = this._slidingWorker$.pipe(map((state: WorkerState) => ({\r\n      style: this.getSliderStyles(state),\r\n      active: state.active\r\n    })));\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // Refresh the slider\r\n    this.updateSlider({value: 0, active: false});\r\n    this._freeModeCurrentOffset = 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.config.gestures && !this.config.disableThumb && typeof Hammer !== 'undefined') {\r\n\r\n      let direction: number;\r\n\r\n      switch (this.config.thumbPosition) {\r\n        case ThumbnailsPosition.Right:\r\n        case ThumbnailsPosition.Left:\r\n          direction = Hammer.DIRECTION_VERTICAL;\r\n          break;\r\n        case ThumbnailsPosition.Top:\r\n        case ThumbnailsPosition.Bottom:\r\n          direction = Hammer.DIRECTION_HORIZONTAL;\r\n          break;\r\n      }\r\n\r\n      // Activate gestures\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.get('pan').set({direction});\r\n\r\n      this._zone.runOutsideAngular(() => {\r\n        // Move the slider\r\n        switch (this.config.thumbMode) {\r\n          case ThumbnailsMode.Strict:\r\n            this._hammer.on('pan', (e) => this.strictMode(e));\r\n            break;\r\n          case ThumbnailsMode.Free:\r\n            this._hammer.on('pan', (e) => this.freeMode(e));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._hammer) {\r\n      this._hammer.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sliding strict mode\r\n   */\r\n  private strictMode(e) {\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Right:\r\n      case ThumbnailsPosition.Left:\r\n        this.updateSlider({value: e.deltaY, active: true});\r\n        if (e.isFinal) {\r\n          this.updateSlider({value: 0, active: false});\r\n          this.verticalPan(e);\r\n        }\r\n        break;\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.updateSlider({value: e.deltaX, active: true});\r\n        if (e.isFinal) {\r\n          this.updateSlider({value: 0, active: false});\r\n          this.horizontalPan(e);\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sliding free mode\r\n   */\r\n  private freeMode(e) {\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Right:\r\n      case ThumbnailsPosition.Left:\r\n        this.updateSlider({value: this._freeModeCurrentOffset + e.deltaY, active: true});\r\n        if (e.isFinal) {\r\n          if (this.minFreeScrollExceeded(e.deltaY, this.config.thumbWidth, this.config.thumbHeight)) {\r\n            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbHeight;\r\n          } else if (this.maxFreeScrollExceeded(e.deltaY, this.config.thumbHeight, this.config.thumbWidth)) {\r\n            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbHeight;\r\n          } else {\r\n            this._freeModeCurrentOffset += e.deltaY;\r\n          }\r\n          this.updateSlider({value: this._freeModeCurrentOffset, active: false});\r\n        }\r\n        break;\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.updateSlider({value: this._freeModeCurrentOffset + e.deltaX, active: true});\r\n        if (e.isFinal) {\r\n          if (this.minFreeScrollExceeded(e.deltaX, this.config.thumbHeight, this.config.thumbWidth)) {\r\n            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbWidth;\r\n          } else if (this.maxFreeScrollExceeded(e.deltaX, this.config.thumbWidth, this.config.thumbHeight)) {\r\n            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbWidth;\r\n          } else {\r\n            this._freeModeCurrentOffset += e.deltaX;\r\n          }\r\n          this.updateSlider({value: this._freeModeCurrentOffset, active: false});\r\n        }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the minimum free scroll is exceeded (used in Bottom, Left directions)\r\n   */\r\n  private minFreeScrollExceeded(delta: number, width: number, height: number): boolean {\r\n    return -(this._freeModeCurrentOffset + delta - width / 2) > (this.state.items.length - this.state.currIndex) * height;\r\n  }\r\n\r\n  /**\r\n   * Check if the maximum free scroll is exceeded (used in Top, Right directions)\r\n   */\r\n  private maxFreeScrollExceeded(delta: number, width: number, height: number): boolean {\r\n    return this._freeModeCurrentOffset + delta > (this.state.currIndex * width) + (height / 2);\r\n  }\r\n\r\n  /**\r\n   * Convert sliding state to styles\r\n   */\r\n  private getSliderStyles(state: WorkerState): any {\r\n    let value: number;\r\n    switch (this.config.thumbPosition) {\r\n      case ThumbnailsPosition.Top:\r\n      case ThumbnailsPosition.Bottom:\r\n        this.width = '100%';\r\n        this.height = this.config.thumbHeight + 'px';\r\n        value = -(this.state.currIndex * this.config.thumbWidth) - (this.config.thumbWidth / 2 - state.value);\r\n        return {\r\n          transform: `translate3d(${value}px, 0, 0)`,\r\n          width: this.state.items.length * this.config.thumbWidth + 'px',\r\n          height: '100%'\r\n        };\r\n      case ThumbnailsPosition.Left:\r\n      case ThumbnailsPosition.Right:\r\n        this.width = this.config.thumbWidth + 'px';\r\n        this.height = '100%';\r\n        value = -(this.state.currIndex * this.config.thumbHeight) - (this.config.thumbHeight / 2 - state.value);\r\n        return {\r\n          transform: `translate3d(0, ${value}px, 0)`,\r\n          width: '100%',\r\n          height: this.state.items.length * this.config.thumbHeight + 'px'\r\n        };\r\n    }\r\n  }\r\n\r\n  private verticalPan(e: any) {\r\n    if (!(e.direction & Hammer.DIRECTION_UP && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityY > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityY < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaY / 2 <= -this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaY / 2 >= this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private horizontalPan(e: any) {\r\n    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityX > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityX < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaX / 2 <= -this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaX / 2 >= this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private next() {\r\n    this.action.emit('next');\r\n  }\r\n\r\n  private prev() {\r\n    this.action.emit('prev');\r\n  }\r\n\r\n  private updateSlider(state: WorkerState) {\r\n    const newState: WorkerState = {...this._slidingWorker$.value, ...state};\r\n    this._slidingWorker$.next(newState);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnDestroy,\r\n  OnInit,\r\n  OnChanges,\r\n  Inject,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  PLATFORM_ID\r\n} from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { BehaviorSubject, Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { map, tap, debounceTime } from 'rxjs/operators';\r\nimport { GalleryState, GalleryError } from '../models/gallery.model';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { SlidingDirection } from '../models/constants';\r\nimport { SliderState, WorkerState } from '../models/slider.model';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-slider',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div *ngIf=\"sliderState$ | async; let sliderState\"\r\n         class=\"g-items-container\"\r\n         [ngStyle]=\"zoom\">\r\n\r\n      <div class=\"g-slider\"\r\n           [class.g-no-transition]=\"sliderState.active\"\r\n           [ngStyle]=\"sliderState.style\">\r\n\r\n        <gallery-item *ngFor=\"let item of state.items; let i = index\"\r\n                      [type]=\"item.type\"\r\n                      [config]=\"config\"\r\n                      [data]=\"item.data\"\r\n                      [currIndex]=\"state.currIndex\"\r\n                      [index]=\"i\"\r\n                      (tapClick)=\"itemClick.emit(i)\"\r\n                      (error)=\"error.emit({itemIndex: i, error: $event})\">\r\n        </gallery-item>\r\n\r\n      </div>\r\n    </div>\r\n    <ng-content></ng-content>\r\n  `\r\n})\r\nexport class GallerySliderComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  /** Sliding worker */\r\n  private readonly _slidingWorker$ = new BehaviorSubject<WorkerState>({value: 0, active: false});\r\n\r\n  /** HammerJS instance */\r\n  private _hammer: any;\r\n\r\n  /** Stream that emits when the view is re-sized */\r\n  private _resizeSub$: Subscription;\r\n\r\n  /** Stream that emits sliding state */\r\n  sliderState$: Observable<SliderState>;\r\n\r\n  /** Gallery state */\r\n  @Input() state: GalleryState;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Stream that emits when the active item should change */\r\n  @Output() action = new EventEmitter<string | number>();\r\n\r\n  /** Stream that emits when item is clicked */\r\n  @Output() itemClick = new EventEmitter<number>();\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<GalleryError>();\r\n\r\n  /** Item zoom */\r\n  get zoom() {\r\n    return {transform: `perspective(50px) translate3d(0, 0, ${-this.config.zoomOut}px)`};\r\n  }\r\n\r\n  constructor(private _el: ElementRef, private _zone: NgZone, @Inject(PLATFORM_ID) private platform: Object) {\r\n\r\n    // Activate sliding worker\r\n    this.sliderState$ = this._slidingWorker$.pipe(map((state: WorkerState) => ({\r\n      style: this.getSliderStyles(state),\r\n      active: state.active\r\n    })));\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // Refresh the slider\r\n    this.updateSlider({value: 0, active: false});\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.config.gestures && typeof Hammer !== 'undefined') {\r\n\r\n      const direction = this.config.slidingDirection === SlidingDirection.Horizontal\r\n        ? Hammer.DIRECTION_HORIZONTAL\r\n        : Hammer.DIRECTION_VERTICAL;\r\n\r\n      // Activate gestures\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.get('pan').set({direction});\r\n\r\n      this._zone.runOutsideAngular(() => {\r\n        // Move the slider\r\n        this._hammer.on('pan', (e) => {\r\n\r\n          switch (this.config.slidingDirection) {\r\n            case SlidingDirection.Horizontal:\r\n              this.updateSlider({value: e.deltaX, active: true});\r\n              if (e.isFinal) {\r\n                this.updateSlider({value: 0, active: false});\r\n                this.horizontalPan(e);\r\n              }\r\n              break;\r\n            case SlidingDirection.Vertical:\r\n              this.updateSlider({value: e.deltaY, active: true});\r\n              if (e.isFinal) {\r\n                this.updateSlider({value: 0, active: false});\r\n                this.verticalPan(e);\r\n              }\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    // Rearrange slider on window resize\r\n    if (isPlatformBrowser(this.platform)) {\r\n      this._resizeSub$ = fromEvent(window, 'resize').pipe(\r\n        debounceTime(200),\r\n        tap(() => this.updateSlider(this._slidingWorker$.value))\r\n      ).subscribe();\r\n    }\r\n\r\n    setTimeout(() => this.updateSlider({value: 0, active: false}));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._hammer) {\r\n      this._hammer.destroy();\r\n    }\r\n    if (this._resizeSub$) {\r\n      this._resizeSub$.unsubscribe();\r\n    }\r\n    this._slidingWorker$.complete();\r\n  }\r\n\r\n  /**\r\n   * Convert sliding state to styles\r\n   */\r\n  private getSliderStyles(state: WorkerState): any {\r\n    switch (this.config.slidingDirection) {\r\n      case SlidingDirection.Horizontal:\r\n        return {\r\n          transform: `translate3d(${-(this.state.currIndex * this._el.nativeElement.offsetWidth) + state.value}px, 0, 0)`,\r\n          width: `calc(100% * ${this.state.items.length})`,\r\n          height: '100%'\r\n        };\r\n      case SlidingDirection.Vertical:\r\n        return {\r\n          transform: `translate3d(0, ${-(this.state.currIndex * this._el.nativeElement.offsetHeight) + state.value}px, 0)`,\r\n          width: '100%',\r\n          height: `calc(100% * ${this.state.items.length})`,\r\n        };\r\n    }\r\n  }\r\n\r\n  private verticalPan(e) {\r\n    if (!(e.direction & Hammer.DIRECTION_UP && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityY > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityY < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaY / 2 <= -this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaY / 2 >= this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private horizontalPan(e) {\r\n    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {\r\n      return;\r\n    }\r\n    if (e.velocityX > 0.3) {\r\n      this.prev();\r\n    } else if (e.velocityX < -0.3) {\r\n      this.next();\r\n    } else {\r\n      if (e.deltaX / 2 <= -this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.next();\r\n      } else if (e.deltaX / 2 >= this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {\r\n        this.prev();\r\n      } else {\r\n        this.action.emit(this.state.currIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  private next() {\r\n    this.action.emit('next');\r\n  }\r\n\r\n  private prev() {\r\n    this.action.emit('prev');\r\n  }\r\n\r\n  private updateSlider(state: WorkerState) {\r\n    const newState: WorkerState = {...this._slidingWorker$.value, ...state};\r\n    this._slidingWorker$.next(newState);\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { GalleryState } from '../models/gallery.model';\r\n\r\n@Component({\r\n  selector: 'gallery-counter',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"g-counter\">{{(state.currIndex + 1) + '/' + state.items.length}}</div>\r\n  `\r\n})\r\nexport class GalleryCounterComponent {\r\n  @Input() state: GalleryState;\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { GalleryConfig } from '../models/config.model';\r\nimport { LoadingStrategy, GalleryItemType } from '../models/constants';\r\n\r\n@Component({\r\n  selector: 'gallery-item',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <ng-container *ngIf=\"load\" [ngSwitch]=\"type\">\r\n\r\n      <ng-container *ngSwitchCase=\"Types.Image\">\r\n\r\n        <gallery-image [src]=\"data.src\"\r\n                       [loadingIcon]=\"config.loadingIcon\"\r\n                       [loadingError]=\"config.loadingError\"\r\n                       (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n        <div class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate;\r\n          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }\">\r\n          </ng-container>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n      <gallery-video *ngSwitchCase=\"Types.Video\"\r\n                     [src]=\"data.src\"\r\n                     [poster]=\"data.poster\"\r\n                     [pause]=\"currIndex !== index\"\r\n                     (error)=\"error.emit($event)\"></gallery-video>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Youtube\"\r\n                      [src]=\"data.src\"\r\n                      [pause]=\"currIndex !== index\"></gallery-iframe>\r\n\r\n      <gallery-iframe *ngSwitchCase=\"Types.Iframe\"\r\n                      [src]=\"data.src\"></gallery-iframe>\r\n\r\n      <ng-container *ngSwitchDefault>\r\n\r\n        <div class=\"g-template g-item-template\">\r\n          <ng-container *ngTemplateOutlet=\"config.itemTemplate;\r\n          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }\">\r\n          </ng-container>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n    </ng-container>\r\n  `\r\n})\r\nexport class GalleryItemComponent {\r\n\r\n  readonly Types = GalleryItemType;\r\n\r\n  /** Gallery config */\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: string;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: any;\r\n\r\n  /** Stream that emits when an error occurs */\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @HostBinding('class.g-active-item') get isActive() {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n  get load() {\r\n    switch (this.config.loadingStrategy) {\r\n      case LoadingStrategy.Preload:\r\n        return true;\r\n      case LoadingStrategy.Lazy:\r\n        return this.currIndex === this.index;\r\n      default:\r\n        return this.currIndex === this.index || this.currIndex === this.index - 1 || this.currIndex === this.index + 1;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, Output, EventEmitter } from '@angular/core';\r\nimport { GalleryConfig } from '../models/config.model';\r\n\r\n@Component({\r\n  selector: 'gallery-thumb',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <gallery-image [src]=\"data.thumb\" \r\n                   mode=\"indeterminate\"\r\n                   [isThumbnail]=\"true\" \r\n                   [loadingIcon]=\"config.thumbLoadingIcon\"\r\n                   [loadingError]=\"config.thumbLoadingError \"\r\n                   (error)=\"error.emit($event)\"></gallery-image>\r\n\r\n    <div *ngIf=\"config.thumbTemplate\" class=\"g-template g-thumb-template\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"config.thumbTemplate; context: { index: this.index, type: this.type, data: this.data }\">\r\n      </ng-container>\r\n    </div>\r\n  `\r\n})\r\nexport class GalleryThumbComponent {\r\n\r\n  @Input() config: GalleryConfig;\r\n\r\n  /** Item's index in the gallery */\r\n  @Input() index: number;\r\n\r\n  /** Gallery current index */\r\n  @Input() currIndex: number;\r\n\r\n  /** Item's type 'image', 'video', 'youtube', 'iframe' */\r\n  @Input() type: string;\r\n\r\n  /** Item's data, this object contains the data required to display the content (e.g. src path) */\r\n  @Input() data: any;\r\n\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  @HostBinding('class.g-active-thumb') get isActive() {\r\n    return this.index === this.currIndex;\r\n  }\r\n\r\n}\r\n","import { Directive, Input, Output, OnDestroy, SimpleChanges, OnChanges, EventEmitter, Inject } from '@angular/core';\r\nimport { Subject, Observable, Subscription, zip, fromEvent } from 'rxjs';\r\nimport { tap, switchMap } from 'rxjs/operators';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Directive({\r\n  selector: '[lazyImage]'\r\n})\r\nexport class LazyImage implements OnChanges, OnDestroy {\r\n\r\n  private _imageLoader$ = new Subject<string>();\r\n  private _loaderSub$ = Subscription.EMPTY;\r\n\r\n  @Input('lazyImage') src: string;\r\n\r\n  @Output() loaded = new EventEmitter<string>();\r\n  @Output() error = new EventEmitter<Error>();\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any) {\r\n    this._loaderSub$ = this._imageLoader$.pipe(\r\n      switchMap((imageSrc: string) => this.nativeLoader(imageSrc))\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['src'] && changes['src'].previousValue !== changes['src'].currentValue) {\r\n      this.loadImage(this.src);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._loaderSub$.unsubscribe();\r\n    this._imageLoader$.complete();\r\n  }\r\n\r\n  loadImage(imagePath: string) {\r\n    this._imageLoader$.next(imagePath);\r\n  }\r\n\r\n  /**\r\n   * Native image loader, does not emit progress\r\n   * @param url\r\n   */\r\n  nativeLoader(url: string): Observable<any> {\r\n    const img = this.document.createElement('img');\r\n    // Stop previously loading\r\n    img.src = url;\r\n    // Image load success\r\n    const loadSuccess = fromEvent(img, 'load').pipe(\r\n      tap(() => this.loaded.emit(url))\r\n    );\r\n    // Image load failed\r\n    const loadError = fromEvent(img, 'error').pipe(\r\n      tap(() => this.error.emit(new Error(`[lazyImage]: The image ${url} did not load`)))\r\n    );\r\n    return zip(loadSuccess, loadError);\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnDestroy, OnInit, Output, ElementRef, EventEmitter } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\ndeclare const Hammer: any;\r\n\r\n/**\r\n * This directive uses tap event if HammerJS is loaded, otherwise it falls back to normal click event\r\n */\r\n@Directive({\r\n  selector: '[tapClick]'\r\n})\r\nexport class TapClick implements OnInit, OnDestroy {\r\n\r\n  private _hammer: any;\r\n  clickListener = Subscription.EMPTY;\r\n  @Input() tapClickDisabled: boolean;\r\n  @Output() tapClick = new EventEmitter();\r\n\r\n  constructor(private _el: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activateClickEvent();\r\n  }\r\n\r\n  activateClickEvent() {\r\n    if (typeof Hammer !== 'undefined') {\r\n      // Use Hammer.js tap event\r\n      this._hammer = new Hammer(this._el.nativeElement);\r\n      this._hammer.on('tap', () => {\r\n        if (!this.tapClickDisabled) {\r\n          this.tapClick.emit(null);\r\n        }\r\n      });\r\n    } else {\r\n      // Use normal click event\r\n      this.clickListener = fromEvent(this._el.nativeElement, 'click').pipe(\r\n        filter(() => !this.tapClickDisabled),\r\n        tap(() => this.tapClick.emit(null))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._hammer) {\r\n      this._hammer.destroy();\r\n    }\r\n    this.clickListener.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { GalleryConfig, GALLERY_CONFIG } from './models/config.model';\r\n\r\nimport { GalleryComponent } from './components/gallery.component';\r\nimport { GalleryNavComponent } from './components/gallery-nav.component';\r\nimport { GalleryCoreComponent } from './components/gallery-core.component';\r\nimport { GalleryDotsComponent } from './components/gallery-dots.component';\r\nimport { GalleryThumbsComponent } from './components/gallery-thumbs.component';\r\nimport { GallerySliderComponent } from './components/gallery-slider.component';\r\nimport { GalleryCounterComponent } from './components/gallery-counter.component';\r\n\r\nimport { GalleryItemComponent } from './components/gallery-item.component';\r\nimport { GalleryThumbComponent } from './components/gallery-thumb.component';\r\nimport { GalleryImageComponent } from './components/templates/gallery-image.component';\r\nimport { GalleryVideoComponent } from './components/templates/gallery-video.component';\r\nimport { GalleryIframeComponent } from './components/templates/gallery-iframe.component';\r\n\r\nimport { LazyImage } from './directives/lazy-image';\r\nimport { TapClick } from './directives/tap-click';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n    GalleryComponent,\r\n    GalleryNavComponent,\r\n    GalleryDotsComponent,\r\n    GalleryCoreComponent,\r\n    GallerySliderComponent,\r\n    GalleryCounterComponent,\r\n    GalleryThumbsComponent,\r\n    GalleryThumbComponent,\r\n    GalleryItemComponent,\r\n    GalleryImageComponent,\r\n    GalleryVideoComponent,\r\n    GalleryIframeComponent,\r\n    LazyImage,\r\n    TapClick\r\n  ],\r\n  exports: [\r\n    GalleryComponent,\r\n    LazyImage,\r\n    TapClick,\r\n  ]\r\n})\r\nexport class GalleryModule {\r\n  static withConfig(config: GalleryConfig): ModuleWithProviders {\r\n\r\n    return {\r\n      ngModule: GalleryModule,\r\n      providers: [\r\n        {\r\n          provide: GALLERY_CONFIG,\r\n          useValue: config\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}